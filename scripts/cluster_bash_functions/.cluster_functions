alias vcf='vi /storage/brno12-cerit/home/zikesfil/.cluster_functions'
alias qu='qstat -u zikesfil'
alias qn='echo $(( $(qu | wc -l) - 5 ))'

cluster_type="CLUSTER.TYPE"
cluster_pattern=("" "Normal t" "Converged" "Normal t")
cluster_path=("" "freq.out" "nmode/QGRAD.OUT" "nmode/roa/roa.out")
cluster_dir=("" "" "nmode/" "nmode/roa/")

cls() { cd /storage/brno3-cerit/home/zikesfil/cluster/C$([[ $1 -lt 10 ]] && echo "0")${1}; }
cluster_diff() { diff --unchanged-line-format="" --old-line-format="" --new-line-format="%L" .cluster/$1 .cluster/$2 > .cluster/$3; }
cluster_hosts() { h=($(find -name MACHINE.LOG)); for i in ${h[@]}; do n=$(echo $i | cut -d "/" -f 2 | cut -d "-" -f 1);
	echo "$n:$(cat $i)" >> .cluster/.hosts; rm -f $i; done; }
#cluster_init: .TYPE, .cluster, submit to queue
#cluster_new

find_cluster() { grep -s "${1}:" .cluster/.jobs | sed 's/:/   /g'; }
find_host()   { grep -s "${1}:" .cluster/.hosts | sed 's/:/   /g'; }

list_done() { [[ $# -gt 0 ]] && c=$1 || c=1; lst=($( cat ${cluster_type} )); for i in ${lst[@]};
	do grep -s -H ${cluster_pattern[$c]}  $i-dir/${cluster_path[$c]} | cut -d "-" -f 1; done; }
list_running() { jbs=($(qstat -u zikesfil | tail -n +6 | grep "R" | awk '{ print $1 }'));
	for i in ${jbs[@]}; do find_cluster $(echo $i | cut -d "." -f  1); done; }
list_queued() { jbs=($(qstat -u zikesfil | tail -n +6 | grep "Q" | awk '{ print $1 }'));
	for i in ${jbs[@]}; do find_cluster $(echo $i | cut -d "." -f  1); done; }
list_empty() { [[ $# -gt 0 ]] && c=$1 || c=1; lst=($( cat ${cluster_type} )); for i in ${lst[@]};
	do [[ ! -d $i-dir/${cluster_dir[$c]} ]] && echo $i; done; }
list_missing() { [[ $# -gt 0 ]] && c=$1 || c=1; lst=($( cat ${cluster_type} )); printf "%s\n" "${lst[@]}" > .cluster/.ll;
	list_done $c > .cluster/.ld; list_empty $c > .cluster/.le;
	list_running | awk '{print $2}' > .cluster/.lr; list_queued | awk '{ print $2 }' > .cluster/.lq;
	cluster_diff .ld .ll .l1; cluster_diff .lr .l1 .l2; cluster_diff .lq .l2 .l1; cluster_diff .le .l1 .l; cat .cluster/.l; }



#OLD
CLDP=1
#FIND
find_cluster_old() {
 if [ $CLDP == 1 ]; then
	find -name freq.l$1 | cut -d "/" -f 2 | cut -d "-" -f 1
 else
 if [ $CLDP == 2 ]; then
	find -name nmode.l$1 | cut -d "/" -f 2 | cut -d "-" -f 1
 fi; fi
}

find_job() {
 if [ $CLDP == 1 ]; then
	head -q -n 1 $1-dir/freq.l*
 else
 if [ $CLDP == 2 ]; then
	head -q -n 1 $1-dir/nmode/nmode.l*
 fi; fi
}

find_machine() {
 if [ $CLDP == 1 ]; then
	head -q -n 2 $1-dir/freq.l* | tail -n 1
 else
 if [ $CLDP == 2 ]; then
	head -q -n 2 $1-dir/nmode/nmode.l* | tail -n 1
 fi; fi
}


#PROCEDURES
CLTP() { lst=($( cat CLUSTER.TYPE )); }
CLLS() { CLTP; unset lstt; for i in ${lst[@]}; do lstt+=( $(ls $i) ); done; }
GRNM() { grep -s $1 $2 | wc -l; }
GRJB() { [[ $(ls $1-dir/freq.l* 2>/dev/null | wc -l) -gt 0 ]] && qstat -u zikesfil | grep -s $(find_job $1 | tail -n 1) | wc -l || echo 0; }

#LIST

list_queued_old() {
 if [ $CLDP == 1 ]; then
	for i in ${lst[@]}; do [[ -f $i-dir/QUEUE ]] && echo $i; done;
 else
 if [ $CLDP == 2 ]; then
	for i in ${lst[@]}; do [[ -f $i-dir/nmode/QUEUE ]] && echo $i; done;
 fi; fi
}

list_missing_old() { CLTP;
 if [ $CLDP == 1 ]; then
	for i in ${lst[@]}; do [[ -d $i-dir/ ]] && [[ $(GRNM "Normal t" $i-dir/freq.out*) == 0 ]] && [[ ! -f $i-dir/QUEUE ]] && [[ $(GRJB $i) == 0 ]] && echo $i; done;
 else
 if [ $CLDP == 2 ]; then
	 for i in ${lst[@]}; do [[ -d $i-dir/nmode ]] && [[ $(GRNM "Converged" $i-dir/nmode/QGRAD.OUT) == 0 ]] && [[ ! -f $i-dir/nmode/QUEUE ]] && [[ $(GRJB $i) == 0 ]] && echo $i; done;
 fi; fi
}

list_empty_old() { CLTP;
 if [ $CLDP == 1 ]; then
	for i in ${lst[@]}; do [[ ! -d $i-dir/ ]] && echo $i; done
 else
 if [ $CLDP == 2 ]; then
	for i in ${lst[@]}; do [[ ! -d $i-dir/nmode ]] && echo $i; done
 fi; fi
}

list_new() { ls */freq.out.new; }

#CLUSTER
change_cluster_depth() { CLDP=$1; }
run_cluster() { [[ $1 == 1 ]] && ./run.sh; [[ $1 == 2 ]] && ./run2.sh; }
oldnew() { mv $1-dir/freq.out $1-dir/freq.out.old; mv $1-dir/freq.out.new $1-dir/freq.out; tail $1-dir/freq.out.old; echo; tail $1-dir/freq.out; }

